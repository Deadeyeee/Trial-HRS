{"ast":null,"code":"var _jsxFileName = \"D:\\\\CAPSTONE PROJECT DEVELOPMENT PHASE 2022\\\\LearningReact\\\\fixed\\\\TRIAL-HRS\\\\FRONTEND\\\\src\\\\client\\\\components\\\\datePicker\\\\DatePicker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from 'react';\nimport { DateRangeInput } from \"@datepicker-react/styled\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Container, DateContainer, DateLabel } from './styles';\nimport { Title } from '../title/styles';\nimport './style.css';\nimport { LabelDiv } from '../../containers/bookingPage/Styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  startDate: Date.now(),\n  endDate: Date.now() + 86400000,\n  focusedInput: null\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'focusChange':\n      return { ...state,\n        focusedInput: action.payload\n      };\n\n    case 'dateChange':\n      return action.payload;\n\n    default:\n      throw new Error();\n  }\n}\n\nexport const DatePicker = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [nights, setNights] = useState();\n  useEffect(() => {\n    if (state.startDate !== null && state.endDate !== null) {\n      setNights(Math.floor((state.endDate - state.startDate) / (24 * 60 * 60 * 1000)));\n    } else {\n      setNights(0);\n    }\n  }, [state.startDate, state.endDate]);\n  console.log(\"startdate=\" + state.startDate + \" enddate=\" + state.endDate);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(DateContainer, {\n      children: [/*#__PURE__*/_jsxDEV(DateLabel, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          size: \"12px\",\n          children: \"Check in date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          size: \"12px\",\n          children: \"Check out date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: {\n          breakpoints: [\"32em\", \"48em\", \"64em\"],\n          reactDatepicker: {\n            inputFontSize: \"16px\",\n            inputLabelBorder: \"1px solid black\",\n            inputBackground: \"#f2f2f2\",\n            inputPlaceholderFontWeight: \"bold\",\n            datepickerBorderRadius: \"20px\",\n            daySelectedFirstOrLastBackground: \"green\",\n            daySize: [80, 35.5],\n            closeColor: 'red',\n            resetDatesIconColor: 'red',\n            dayBackground: '#2e2e2e',\n            dayColor: 'white',\n            fontFamily: \"'Playfair Display', serif\",\n            colors: {\n              accessibility: \"#D80249\",\n              selectedDay: \"gray\",\n              primaryColor: \"white\"\n            }\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(DateRangeInput, {\n          onDatesChange: data => dispatch({\n            type: 'dateChange',\n            payload: data\n          }),\n          onFocusChange: focusedInput => dispatch({\n            type: 'focusChange',\n            payload: focusedInput\n          }),\n          startDate: state.startDate // Date or null\n          ,\n          endDate: state.endDate // Date or null\n          ,\n          focusedInput: state.focusedInput // START_DATE, END_DATE or null\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LabelDiv, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        color: \"black\",\n        size: \"15px\",\n        children: \"Number of Nights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        family: \"libre baskerville\",\n        size: \"25px\",\n        color: \"#2e2e2e\",\n        weight: \"normal\",\n        fStyle: \"normal\",\n        margin: \"auto 0px 0px 0px\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: nights\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), \" \", nights == 1 || nights == 0 ? \"night\" : \"night(s)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DatePicker, \"6AIPI0pyUEFy272QeGInaEzz2gk=\");\n\n_c = DatePicker;\nexport default DatePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"DatePicker\");","map":{"version":3,"sources":["D:/CAPSTONE PROJECT DEVELOPMENT PHASE 2022/LearningReact/fixed/TRIAL-HRS/FRONTEND/src/client/components/datePicker/DatePicker.js"],"names":["React","useEffect","useReducer","useState","DateRangeInput","ThemeProvider","Container","DateContainer","DateLabel","Title","LabelDiv","initialState","startDate","Date","now","endDate","focusedInput","reducer","state","action","type","payload","Error","DatePicker","dispatch","nights","setNights","Math","floor","console","log","breakpoints","reactDatepicker","inputFontSize","inputLabelBorder","inputBackground","inputPlaceholderFontWeight","datepickerBorderRadius","daySelectedFirstOrLastBackground","daySize","closeColor","resetDatesIconColor","dayBackground","dayColor","fontFamily","colors","accessibility","selectedDay","primaryColor","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from 'react';\r\nimport { DateRangeInput } from \"@datepicker-react/styled\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { Container, DateContainer, DateLabel } from './styles';\r\nimport { Title } from '../title/styles';\r\nimport './style.css';\r\nimport { LabelDiv } from '../../containers/bookingPage/Styles';\r\n\r\nconst initialState = {\r\n    startDate: Date.now(),\r\n    endDate: Date.now() + 86400000,\r\n    focusedInput: null,\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'focusChange':\r\n            return { ...state, focusedInput: action.payload }\r\n        case 'dateChange':\r\n            return action.payload\r\n        default:\r\n            throw new Error()\r\n    }\r\n}\r\n\r\nexport const DatePicker = () => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n    const [nights, setNights] = useState();\r\n    useEffect(() => {\r\n        if (state.startDate !== null && state.endDate !== null) {\r\n            setNights(Math.floor((state.endDate - state.startDate) / (24 * 60 * 60 * 1000)));\r\n        }\r\n        else {\r\n            setNights(0);\r\n        }\r\n    },[state.startDate, state.endDate])\r\n    console.log(\"startdate=\" + state.startDate + \" enddate=\" + state.endDate)\r\n    return (\r\n        <Container>\r\n            <DateContainer>\r\n                <DateLabel>\r\n                    <Title\r\n                        size=\"12px\">\r\n                        Check in date\r\n                    </Title>\r\n                    <Title\r\n                        size=\"12px\">\r\n                        Check out date\r\n                    </Title>\r\n                </DateLabel>\r\n                <ThemeProvider\r\n                    theme={{\r\n                        breakpoints: [\"32em\", \"48em\", \"64em\"],\r\n                        reactDatepicker: {\r\n                            inputFontSize: \"16px\",\r\n                            inputLabelBorder: \"1px solid black\",\r\n                            inputBackground: \"#f2f2f2\",\r\n                            inputPlaceholderFontWeight: \"bold\",\r\n                            datepickerBorderRadius: \"20px\",\r\n                            daySelectedFirstOrLastBackground: \"green\",\r\n                            daySize: [80, 35.5],\r\n                            closeColor: 'red',\r\n                            resetDatesIconColor: 'red',\r\n                            dayBackground: '#2e2e2e',\r\n                            dayColor: 'white',\r\n                            fontFamily: \"'Playfair Display', serif\",\r\n                            colors: {\r\n                                accessibility: \"#D80249\",\r\n                                selectedDay: \"gray\",\r\n                                primaryColor: \"white\"\r\n                            }\r\n                        },\r\n                    }}\r\n\r\n                >\r\n                    <DateRangeInput\r\n                        onDatesChange={data => dispatch({ type: 'dateChange', payload: data })}\r\n                        onFocusChange={focusedInput => dispatch({ type: 'focusChange', payload: focusedInput })}\r\n                        startDate={state.startDate} // Date or null\r\n                        endDate={state.endDate} // Date or null\r\n                        focusedInput={state.focusedInput} // START_DATE, END_DATE or null\r\n                    />\r\n                </ThemeProvider>\r\n\r\n            </DateContainer>\r\n            <LabelDiv>\r\n                <Title\r\n                    color='black'\r\n                    size='15px'\r\n                >\r\n\r\n                    Number of Nights\r\n                </Title>\r\n\r\n                <Title\r\n                    family='libre baskerville'\r\n                    size='25px'\r\n                    color='#2e2e2e'\r\n                    weight='normal'\r\n                    fStyle='normal'\r\n                    margin='auto 0px 0px 0px'\r\n                >\r\n                    <b>{nights}</b> {nights == 1 || nights == 0 ? \"night\" : \"night(s)\"}\r\n                </Title>\r\n            </LabelDiv>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DatePicker;"]},"metadata":{},"sourceType":"module"}